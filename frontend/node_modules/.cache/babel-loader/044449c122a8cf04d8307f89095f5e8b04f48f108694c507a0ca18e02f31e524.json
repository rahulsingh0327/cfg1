{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsingh/cfg1/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { Handle, Position } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AssignmentNode({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '2px solid #555',\n      padding: '8px',\n      borderRadius: 4,\n      background: '#e0f7fa',\n      textAlign: 'center',\n      fontFamily: 'monospace',\n      position: 'relative',\n      minWidth: 120\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      style: {\n        background: '#555',\n        width: 8,\n        height: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), data.label, /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      style: {\n        background: '#555',\n        width: 8,\n        height: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = AssignmentNode;\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode\n};\nexport default function App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code\n      })\n    });\n    const data = await response.json();\n    const positionedNodes = data.nodes.map((n, i) => ({\n      ...n,\n      position: {\n        x: window.innerWidth / 2 - 100,\n        y: i * 150\n      },\n      sourcePosition: 'bottom',\n      targetPosition: 'top'\n    }));\n    const lastNode = positionedNodes[positionedNodes.length - 1];\n    const endId = 'end';\n    const endNode = {\n      id: endId,\n      type: 'assignment',\n      data: {\n        label: 'END'\n      },\n      position: {\n        x: window.innerWidth / 2 - 100,\n        y: positionedNodes.length * 150\n      },\n      sourcePosition: 'bottom',\n      targetPosition: 'top'\n    };\n    const endEdge = {\n      id: `e${lastNode.id}-${endId}`,\n      source: lastNode.id,\n      target: endId,\n      type: 'step',\n      markerEnd: {\n        type: 'arrowclosed',\n        color: '#000'\n      },\n      style: {\n        stroke: '#000',\n        strokeWidth: 2\n      }\n    };\n    setNodes([...positionedNodes, endNode]);\n    setEdges([...data.edges, endEdge]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Python AST Flowchart Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 80,\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: \"Paste Python code...\",\n      style: {\n        width: '100%',\n        fontFamily: 'monospace'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Visualize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '600px',\n        border: '1px solid #ccc',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges.map(e => ({\n          ...e,\n          type: 'step',\n          markerEnd: {\n            type: 'arrowclosed',\n            color: '#000'\n          },\n          animated: e.animated || false,\n          label: e.label || '',\n          style: {\n            stroke: '#000',\n            strokeWidth: 2\n          }\n        })),\n        nodeTypes: nodeTypes,\n        fitView: true,\n        panOnDrag: true,\n        zoomOnScroll: true,\n        zoomOnPinch: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I61AIxqX4XnazQleI6YPqwcA5w4=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AssignmentNode\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","Handle","Position","IoNode","DecisionNode","jsxDEV","_jsxDEV","AssignmentNode","data","style","border","padding","borderRadius","background","textAlign","fontFamily","position","minWidth","children","type","Top","width","height","fileName","_jsxFileName","lineNumber","columnNumber","label","Bottom","_c","nodeTypes","assignment","io","decision","App","_s","code","setCode","nodes","setNodes","edges","setEdges","handleSubmit","response","fetch","method","headers","body","JSON","stringify","json","positionedNodes","map","n","i","x","window","innerWidth","y","sourcePosition","targetPosition","lastNode","length","endId","endNode","id","endEdge","source","target","markerEnd","color","stroke","strokeWidth","rows","cols","value","onChange","e","placeholder","onClick","marginTop","animated","fitView","panOnDrag","zoomOnScroll","zoomOnPinch","_c2","$RefreshReg$"],"sources":["/Users/rahulsingh/cfg1/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, { Handle, Position } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\n\nexport function AssignmentNode({ data }) {\n  return (\n    <div style={{\n      border: '2px solid #555',\n      padding: '8px',\n      borderRadius: 4,\n      background: '#e0f7fa',\n      textAlign: 'center',\n      fontFamily: 'monospace',\n      position: 'relative',\n      minWidth: 120\n    }}>\n      {/* Incoming arrow handle (top) */}\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        style={{ background: '#555', width: 8, height: 8 }}\n      />\n\n      {/* Label content */}\n      {data.label}\n\n      {/* Outgoing arrow handle (bottom) */}\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        style={{ background: '#555', width: 8, height: 8 }}\n      />\n    </div>\n  );\n}\n\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode,\n};\n\nexport default function App() {\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code }),\n    });\n    const data = await response.json();\n  \n    const positionedNodes = data.nodes.map((n, i) => ({\n      ...n,\n      position: { x: window.innerWidth / 2 - 100, y: i * 150 },\n      sourcePosition: 'bottom',\n      targetPosition: 'top'\n    }));\n  \n    const lastNode = positionedNodes[positionedNodes.length - 1];\n    const endId = 'end';\n    const endNode = {\n      id: endId,\n      type: 'assignment',\n      data: { label: 'END' },\n      position: { x: window.innerWidth / 2 - 100, y: positionedNodes.length * 150 },\n      sourcePosition: 'bottom',\n      targetPosition: 'top'\n    };\n  \n    const endEdge = {\n      id: `e${lastNode.id}-${endId}`,\n      source: lastNode.id,\n      target: endId,\n      type: 'step',\n      markerEnd: { type: 'arrowclosed', color: '#000' },\n      style: { stroke: '#000', strokeWidth: 2 }\n    };\n  \n    setNodes([...positionedNodes, endNode]);\n    setEdges([...data.edges, endEdge]);\n  };\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h1>Python AST Flowchart Visualizer</h1>\n      <textarea\n        rows={10}\n        cols={80}\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Paste Python code...\"\n        style={{ width: '100%', fontFamily: 'monospace' }}\n      />\n      <br />\n      <button onClick={handleSubmit}>Visualize</button>\n\n      <div style={{ height: '600px', border: '1px solid #ccc', marginTop: '1rem' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges.map(e => ({\n            ...e,\n            type: 'step',\n            markerEnd: {\n              type: 'arrowclosed',\n              color: '#000'\n            },\n            animated: e.animated || false,\n            label: e.label || '',\n            style: { stroke: '#000', strokeWidth: 2 }\n          }))}\n          nodeTypes={nodeTypes}\n          fitView\n          panOnDrag\n          zoomOnScroll\n          zoomOnPinch\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}