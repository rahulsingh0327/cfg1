{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsingh/cfg1/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { Handle, Position } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\nimport getLayoutedElements from './layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AssignmentNode({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '2px solid #555',\n      padding: '8px',\n      borderRadius: 4,\n      background: '#e0f7fa',\n      textAlign: 'center',\n      fontFamily: 'monospace',\n      position: 'relative',\n      minWidth: 120\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      style: {\n        background: '#555',\n        width: 8,\n        height: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), data.label, /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      style: {\n        background: '#555',\n        width: 8,\n        height: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = AssignmentNode;\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode\n};\nexport default function App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code\n      })\n    });\n    const data = await response.json();\n\n    // ðŸ§  Layout nodes and edges using Dagre\n    const {\n      nodes: layoutedNodes,\n      edges: layoutedEdges\n    } = getLayoutedElements(data.nodes, data.edges);\n    setNodes(layoutedNodes);\n    setEdges(layoutedEdges);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Python AST Flowchart Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 80,\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: \"Paste Python code...\",\n      style: {\n        width: '100%',\n        fontFamily: 'monospace'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Visualize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '80vh',\n        border: '1px solid #ccc',\n        marginTop: '1rem',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges.map(e => ({\n          ...e,\n          type: 'step',\n          markerEnd: {\n            type: 'arrowclosed',\n            color: '#000'\n          },\n          animated: e.animated || false,\n          label: e.label || '',\n          style: {\n            stroke: '#000',\n            strokeWidth: 2\n          }\n        })),\n        nodeTypes: nodeTypes,\n        fitView: true,\n        panOnDrag: true,\n        zoomOnScroll: true,\n        zoomOnPinch: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I61AIxqX4XnazQleI6YPqwcA5w4=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AssignmentNode\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","Handle","Position","IoNode","DecisionNode","getLayoutedElements","jsxDEV","_jsxDEV","AssignmentNode","data","style","border","padding","borderRadius","background","textAlign","fontFamily","position","minWidth","children","type","Top","width","height","fileName","_jsxFileName","lineNumber","columnNumber","label","Bottom","_c","nodeTypes","assignment","io","decision","App","_s","code","setCode","nodes","setNodes","edges","setEdges","handleSubmit","response","fetch","method","headers","body","JSON","stringify","json","layoutedNodes","layoutedEdges","rows","cols","value","onChange","e","target","placeholder","onClick","marginTop","overflow","map","markerEnd","color","animated","stroke","strokeWidth","fitView","panOnDrag","zoomOnScroll","zoomOnPinch","_c2","$RefreshReg$"],"sources":["/Users/rahulsingh/cfg1/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, { Handle, Position } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\nimport getLayoutedElements from './layout';\n\n\nexport function AssignmentNode({ data }) {\n  return (\n    <div style={{\n      border: '2px solid #555',\n      padding: '8px',\n      borderRadius: 4,\n      background: '#e0f7fa',\n      textAlign: 'center',\n      fontFamily: 'monospace',\n      position: 'relative',\n      minWidth: 120\n    }}>\n      {/* Incoming arrow handle (top) */}\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        style={{ background: '#555', width: 8, height: 8 }}\n      />\n\n      {/* Label content */}\n      {data.label}\n\n      {/* Outgoing arrow handle (bottom) */}\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        style={{ background: '#555', width: 8, height: 8 }}\n      />\n    </div>\n  );\n}\n\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode,\n};\n\nexport default function App() {\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code }),\n    });\n    const data = await response.json();\n  \n   \n\n    // ðŸ§  Layout nodes and edges using Dagre\n    const { nodes: layoutedNodes, edges: layoutedEdges } = getLayoutedElements(data.nodes, data.edges);\n  \n    setNodes(layoutedNodes);\n    setEdges(layoutedEdges);\n  };\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h1>Python AST Flowchart Visualizer</h1>\n      <textarea\n        rows={10}\n        cols={80}\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Paste Python code...\"\n        style={{ width: '100%', fontFamily: 'monospace' }}\n      />\n      <br />\n      <button onClick={handleSubmit}>Visualize</button>\n\n      <div style={{ height: '80vh', border: '1px solid #ccc', marginTop: '1rem', overflow: 'auto' }}>\n      <ReactFlow\n          nodes={nodes}\n          edges={edges.map(e => ({\n            ...e,\n            type: 'step',\n            markerEnd: {\n              type: 'arrowclosed',\n              color: '#000'\n            },\n            animated: e.animated || false,\n            label: e.label || '',\n            style: { stroke: '#000', strokeWidth: 2 }\n          }))}\n          nodeTypes={nodeTypes}\n          fitView\n          panOnDrag\n          zoomOnScroll\n          zoomOnPinch\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,qBAAqB;AACjE,OAAO,oCAAoC;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,mBAAmB,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,OAAO,SAASC,cAAcA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACvC,oBACEF,OAAA;IAAKG,KAAK,EAAE;MACVC,MAAM,EAAE,gBAAgB;MACxBC,OAAO,EAAE,KAAK;MACdC,YAAY,EAAE,CAAC;MACfC,UAAU,EAAE,SAAS;MACrBC,SAAS,EAAE,QAAQ;MACnBC,UAAU,EAAE,WAAW;MACvBC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBAEAZ,OAAA,CAACN,MAAM;MACLmB,IAAI,EAAC,QAAQ;MACbH,QAAQ,EAAEf,QAAQ,CAACmB,GAAI;MACvBX,KAAK,EAAE;QAAEI,UAAU,EAAE,MAAM;QAAEQ,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EAGDlB,IAAI,CAACmB,KAAK,eAGXrB,OAAA,CAACN,MAAM;MACLmB,IAAI,EAAC,QAAQ;MACbH,QAAQ,EAAEf,QAAQ,CAAC2B,MAAO;MAC1BnB,KAAK,EAAE;QAAEI,UAAU,EAAE,MAAM;QAAEQ,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,GA9BetB,cAAc;AAgC9B,MAAMuB,SAAS,GAAG;EAChBC,UAAU,EAAExB,cAAc;EAC1ByB,EAAE,EAAE9B,MAAM;EACV+B,QAAQ,EAAE9B;AACZ,CAAC;AAED,eAAe,SAAS+B,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACwC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0C,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM4C,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb;MAAK,CAAC;IAC/B,CAAC,CAAC;IACF,MAAM5B,IAAI,GAAG,MAAMmC,QAAQ,CAACO,IAAI,CAAC,CAAC;;IAIlC;IACA,MAAM;MAAEZ,KAAK,EAAEa,aAAa;MAAEX,KAAK,EAAEY;IAAc,CAAC,GAAGhD,mBAAmB,CAACI,IAAI,CAAC8B,KAAK,EAAE9B,IAAI,CAACgC,KAAK,CAAC;IAElGD,QAAQ,CAACY,aAAa,CAAC;IACvBV,QAAQ,CAACW,aAAa,CAAC;EACzB,CAAC;EAED,oBACE9C,OAAA;IAAKG,KAAK,EAAE;MAAEE,OAAO,EAAE;IAAO,CAAE;IAAAO,QAAA,gBAC9BZ,OAAA;MAAAY,QAAA,EAAI;IAA+B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCpB,OAAA;MACE+C,IAAI,EAAE,EAAG;MACTC,IAAI,EAAE,EAAG;MACTC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC,sBAAsB;MAClClD,KAAK,EAAE;QAAEY,KAAK,EAAE,MAAM;QAAEN,UAAU,EAAE;MAAY;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MAAQsD,OAAO,EAAElB,YAAa;MAAAxB,QAAA,EAAC;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjDpB,OAAA;MAAKG,KAAK,EAAE;QAAEa,MAAM,EAAE,MAAM;QAAEZ,MAAM,EAAE,gBAAgB;QAAEmD,SAAS,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAA5C,QAAA,eAC9FZ,OAAA,CAACP,SAAS;QACNuC,KAAK,EAAEA,KAAM;QACbE,KAAK,EAAEA,KAAK,CAACuB,GAAG,CAACN,CAAC,KAAK;UACrB,GAAGA,CAAC;UACJtC,IAAI,EAAE,MAAM;UACZ6C,SAAS,EAAE;YACT7C,IAAI,EAAE,aAAa;YACnB8C,KAAK,EAAE;UACT,CAAC;UACDC,QAAQ,EAAET,CAAC,CAACS,QAAQ,IAAI,KAAK;UAC7BvC,KAAK,EAAE8B,CAAC,CAAC9B,KAAK,IAAI,EAAE;UACpBlB,KAAK,EAAE;YAAE0D,MAAM,EAAE,MAAM;YAAEC,WAAW,EAAE;UAAE;QAC1C,CAAC,CAAC,CAAE;QACJtC,SAAS,EAAEA,SAAU;QACrBuC,OAAO;QACPC,SAAS;QACTC,YAAY;QACZC,WAAW;MAAA;QAAAjD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,CA3DuBD,GAAG;AAAAuC,GAAA,GAAHvC,GAAG;AAAA,IAAAL,EAAA,EAAA4C,GAAA;AAAAC,YAAA,CAAA7C,EAAA;AAAA6C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}