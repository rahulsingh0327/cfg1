{"ast":null,"code":"import _objectSpread from\"/Users/rahulsingh/cfg1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import ReactFlow,{MarkerType}from'react-flow-renderer';import'react-flow-renderer/dist/style.css';import AssignmentNode from'./AssignmentNode';import IoNode from'./IoNode';import DecisionNode from'./DecisionNode';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const nodeTypes={assignment:AssignmentNode,io:IoNode,decision:DecisionNode};export default function App(){const[code,setCode]=useState('');const[nodes,setNodes]=useState([]);const[edges,setEdges]=useState([]);const handleSubmit=async()=>{const response=await fetch(\"http://localhost:8000/parse/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({code})});const data=await response.json();setNodes(data.nodes);setEdges(data.edges);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1rem'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Python AST Flowchart Visualizer\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:10,cols:80,value:code,onChange:e=>setCode(e.target.value),placeholder:\"Paste Python code...\",style:{width:'100%',fontFamily:'monospace'}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Visualize\"}),/*#__PURE__*/_jsx(\"div\",{style:{height:'600px',border:'1px solid #ccc',marginTop:'1rem'},children:/*#__PURE__*/_jsx(ReactFlow,{nodes:nodes,edges:edges.map(e=>_objectSpread(_objectSpread({},e),{},{type:'straight',markerEnd:{type:MarkerType.ArrowClosed}})),nodeTypes:nodeTypes,fitView:true})})]});}","map":{"version":3,"names":["React","useState","ReactFlow","MarkerType","AssignmentNode","IoNode","DecisionNode","jsx","_jsx","jsxs","_jsxs","nodeTypes","assignment","io","decision","App","code","setCode","nodes","setNodes","edges","setEdges","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","style","padding","children","rows","cols","value","onChange","e","target","placeholder","width","fontFamily","onClick","height","border","marginTop","map","_objectSpread","type","markerEnd","ArrowClosed","fitView"],"sources":["/Users/rahulsingh/cfg1/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, { MarkerType } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport AssignmentNode from './AssignmentNode';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\n\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode,\n};\n\nexport default function App() {\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code }),\n    });\n    const data = await response.json();\n    setNodes(data.nodes);\n    setEdges(data.edges);\n  };\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h1>Python AST Flowchart Visualizer</h1>\n      <textarea\n        rows={10}\n        cols={80}\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Paste Python code...\"\n        style={{ width: '100%', fontFamily: 'monospace' }}\n      />\n      <br />\n      <button onClick={handleSubmit}>Visualize</button>\n\n      <div style={{ height: '600px', border: '1px solid #ccc', marginTop: '1rem' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges.map(e => ({\n            ...e,\n            type: 'straight',\n            markerEnd: { type: MarkerType.ArrowClosed }\n          }))}\n          nodeTypes={nodeTypes}\n          fitView\n        />\n      </div>\n    </div>\n  );\n}"],"mappings":"oHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,EAAIC,UAAU,KAAQ,qBAAqB,CAC3D,MAAO,oCAAoC,CAC3C,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,SAAS,CAAG,CAChBC,UAAU,CAAER,cAAc,CAC1BS,EAAE,CAAER,MAAM,CACVS,QAAQ,CAAER,YACZ,CAAC,CAED,cAAe,SAAS,CAAAS,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAqB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAAE,CAC3DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEb,IAAK,CAAC,CAC/B,CAAC,CAAC,CACF,KAAM,CAAAc,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCZ,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC,CACpBG,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC,CACtB,CAAC,CAED,mBACEV,KAAA,QAAKsB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC9B1B,IAAA,OAAA0B,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxC1B,IAAA,aACE2B,IAAI,CAAE,EAAG,CACTC,IAAI,CAAE,EAAG,CACTC,KAAK,CAAErB,IAAK,CACZsB,QAAQ,CAAGC,CAAC,EAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACzCI,WAAW,CAAC,sBAAsB,CAClCT,KAAK,CAAE,CAAEU,KAAK,CAAE,MAAM,CAAEC,UAAU,CAAE,WAAY,CAAE,CACnD,CAAC,cACFnC,IAAA,QAAK,CAAC,cACNA,IAAA,WAAQoC,OAAO,CAAEtB,YAAa,CAAAY,QAAA,CAAC,WAAS,CAAQ,CAAC,cAEjD1B,IAAA,QAAKwB,KAAK,CAAE,CAAEa,MAAM,CAAE,OAAO,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAb,QAAA,cAC3E1B,IAAA,CAACN,SAAS,EACRgB,KAAK,CAAEA,KAAM,CACbE,KAAK,CAAEA,KAAK,CAAC4B,GAAG,CAACT,CAAC,EAAAU,aAAA,CAAAA,aAAA,IACbV,CAAC,MACJW,IAAI,CAAE,UAAU,CAChBC,SAAS,CAAE,CAAED,IAAI,CAAE/C,UAAU,CAACiD,WAAY,CAAC,EAC3C,CAAE,CACJzC,SAAS,CAAEA,SAAU,CACrB0C,OAAO,MACR,CAAC,CACC,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}