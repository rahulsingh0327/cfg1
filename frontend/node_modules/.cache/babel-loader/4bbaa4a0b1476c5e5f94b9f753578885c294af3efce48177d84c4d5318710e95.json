{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsingh/cfg1/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { MarkerType } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport AssignmentNode from './AssignmentNode';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode\n};\nexport default function App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code\n      })\n    });\n    const data = await response.json();\n    setNodes(data.nodes);\n    setEdges(data.edges);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Python AST Flowchart Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 80,\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: \"Paste Python code...\",\n      style: {\n        width: '100%',\n        fontFamily: 'monospace'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Visualize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '600px',\n        border: '1px solid #ccc',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges.map(e => ({\n          ...e,\n          type: 'straight',\n          markerEnd: {\n            type: 'arrowclosed' // ✅ lowercase for v10\n          },\n          style: {\n            stroke: '#222'\n          }\n        })),\n        nodeTypes: nodeTypes,\n        fitView: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I61AIxqX4XnazQleI6YPqwcA5w4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","MarkerType","AssignmentNode","IoNode","DecisionNode","jsxDEV","_jsxDEV","nodeTypes","assignment","io","decision","App","_s","code","setCode","nodes","setNodes","edges","setEdges","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","placeholder","width","fontFamily","onClick","height","border","marginTop","map","type","markerEnd","stroke","fitView","_c","$RefreshReg$"],"sources":["/Users/rahulsingh/cfg1/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, { MarkerType } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport AssignmentNode from './AssignmentNode';\nimport IoNode from './IoNode';\nimport DecisionNode from './DecisionNode';\n\nconst nodeTypes = {\n  assignment: AssignmentNode,\n  io: IoNode,\n  decision: DecisionNode,\n};\n\nexport default function App() {\n  const [code, setCode] = useState('');\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  const handleSubmit = async () => {\n    const response = await fetch(\"http://localhost:8000/parse/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code }),\n    });\n    const data = await response.json();\n    setNodes(data.nodes);\n    setEdges(data.edges);\n  };\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h1>Python AST Flowchart Visualizer</h1>\n      <textarea\n        rows={10}\n        cols={80}\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Paste Python code...\"\n        style={{ width: '100%', fontFamily: 'monospace' }}\n      />\n      <br />\n      <button onClick={handleSubmit}>Visualize</button>\n\n      <div style={{ height: '600px', border: '1px solid #ccc', marginTop: '1rem' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges.map(e => ({\n            ...e,\n            type: 'straight',\n            markerEnd: {\n            type: 'arrowclosed', // ✅ lowercase for v10\n            },\n            style: { stroke: '#222' }\n        }))}\n        nodeTypes={nodeTypes}\n        fitView\n        />\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}